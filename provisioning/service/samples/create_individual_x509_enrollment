// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.
'use strict';
var fs = require('fs');
var provisioningServiceClient = require('azure-iot-provisioning-service').ProvisioningServiceClient;

var deviceID = process.argv[2];
var connectionString = process.argv[3];
var serviceClient = provisioningServiceClient.fromConnectionString(connectionString);

var certFile = __dirname + "\\cert\\" + deviceID + "-cert.pem";

if (!fs.existsSync(certFile)) {
    console.log('Certificate File not found:' + certFile);
    process.exit();
} else {
    var certificate = fs.readFileSync(certFile, 'utf-8').toString();
};

var enrollment = {
    registrationId: deviceID,
    deviceID: deviceID,
    attestation: {
      type: 'x509',
      x509: {
        clientCertificates: {
          primary: {
            certificate: certificate
          }
        }
      }
    }
  };

serviceClient.createOrUpdateIndividualEnrollment(enrollment, function(err, enrollmentResponse) {
  if (err) {
    console.log('error creating the individual enrollment: ' + err);
  } else {
    console.log("enrollment record returned: " + JSON.stringify(enrollmentResponse, null, 2));
  }
});
